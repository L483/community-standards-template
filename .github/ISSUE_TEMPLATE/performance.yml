name: Performance
description: Refactor specifically concerning performance improvements
title: "[Performance] kebap-cased-issue-name"
labels: ["Status: Pending", "Type: Performance"]
assignees:
  - L483
body:
  - type: markdown
    attributes:
      value: |
        All text areas support markdown syntax unless explicitly noted otherwise.
  - type: textarea
    id: object-of-interest
    attributes:
      label: Object of Interest
      description: Describe the parts that negatively impact the performance as specifical as possible.
      placeholder: What seems low? Where did analysis reveal bottlenecks/memory leaks/etc.? What parts do not adhere to performant coding practice?
    validations:
      required: true
  - type: textarea
    id: problem-motivation
    attributes:
      label: Problem/Motivation
      description: Describe how/why/in which situations the performance is negatively impacted as detailed as possible. A classification of the code complexity (Big O notation) is always welcome. If the situation is reproducible, provide a step-by-step guide in the form of an ordered list.
      placeholder: |
        What are the conclusions of the performance analysis (e.g. a memory leak)? Why is the current implementation not performant? The performant-problematic situation can be reproduced as follows:
        1. I started here.
        2. Then, I did this.
        ...
    validations:
      required: true
  - type: textarea
    id: solution-proposal
    attributes:
      label: Solution Proposal
      description: Describe the solution that you have in mind as detailed as possible. Explain how/why/in which situations it will improve the performance and quantify the performance gain (new Big O notation).
      placeholder: How could performance be gained?
  - type: textarea
    id: impact
    attributes:
      label: Impact
      description: Describe potential side effects of your solution proposal, which could cause follow-up issues, to the best of your knowledge.
      placeholder: Could my solution proposal cause other problems?
  - type: textarea
    id: acceptance-criteria
    attributes:
      label: Acceptance Criteria
      description: Specify the acceptance criteria as a task list that contains one or more entries.
      placeholder: |
        - [ ] Do this
        - [ ] Do that
        ...
    validations:
      required: true
  - type: textarea
    id: further-information
    attributes:
      label: Further Information
      description: Add additional helpful, issue-related information, such as, links, screenshots, sketches, considerations, thoughts, etc.
      placeholder: Helpful information
  - type: textarea
    id: related-issues
    attributes:
      label: Related Issues
      description: Add a bullet point list of other related issues, in case there are any. In particular, the issue(s) (if you can narrow it/them down) that introduced the need for performance improvement would be helpful.
      placeholder: |
        - #42
        - #73
        ...
  - type: markdown
    attributes:
      value: |
        **Information for contributors about label usage:**<br/>
        
        - select *any number* of fitting labels that have a `Flag: ` prefix
        - select *any number* of fitting labels that have a `For: ` prefix
        - select **exactly one** label that has a `Priority: ` prefix
        - select **exactly one** label that has a `Scope: ` prefix
        - **never** tamper with the initial `Status: Pending` label when creating an issue
        - **never** add, remove, or change any associations (or the lack thereof) between an issue and label that has a `Type: ` prefix
        
        Look at the label descriptions to grasp their proper usage and pick the most fitting.
        If more than one `Type: ` label fits this issue, it is a good indicator that the issue mixes concerns.
        You should then split this issue into multiple issues so that each new issue falls **exactly into one** category.
